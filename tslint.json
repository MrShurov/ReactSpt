{
  "extends": ["tslint:recommended", "tslint-react", "tslint-config-prettier"],
  "linterOptions": {
    "exclude": [
      "config/**/*.js",
      "node_modules/**/*.ts",
      "coverage/lcov-report/*.js"
    ]
  },
  "rules": {
    "quotemark": [true, "single", "jsx-double"],
    "indent": {
      "options": [true, "spaces", 2],
      "severity": "warning"
    },
    "ban-comma-operator": true,
    "typedef": [true, "parameter", "member-variable-declaration"],
    "curly": false,
    "ordered-imports": false,
    "comment-format": false,
    "max-line-length": [true, 160],
    "semicolon": [true, "always", "ignore-bound-class-methods"],
    "return-undefined": true,
    "one-variable-per-declaration": true,
    "switch-final-break": [true, "always"],
    "no-unnecessary-initializer": true,
    "number-literal-format": true,
    "interface-name": [true, "always-prefix"],
    "no-boolean-literal-compare": true,
    "class-name": true,
    "no-import-side-effect": [true, {"ignore-module": "(\\.scss|\\.css)$"}],
    "no-any": true,
    "strict-type-predicates": true,
    "triple-equals": [true, "allow-null-check", "allow-undefined-check"],
    "use-isnan": true,
    "cyclomatic-complexity": [true, 50],
    "max-classes-per-file": [true, 5, "exclude-class-expressions"],
    "max-file-line-count": [true, 500],
    "no-bitwise": true,
    "no-debugger": true,
    "no-string-throw": true,
    "no-invalid-this": false,
    "no-var-keyword": true,
    "no-var-requires": true,
    "only-arrow-functions": {
      "options": [false, "allow-declarations", "allow-named-functions"]
    },
    "no-eval": true,
    "ban-types": {
      "options": [
        ["Object", "Avoid using the `Object` type. Did you mean `object`?"],
        ["TODOFunction", "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."],
        ["Boolean", "Avoid using the `Boolean` type. Did you mean `boolean`?"],
        ["Number", "Avoid using the `Number` type. Did you mean `number`?"],
        ["String", "Avoid using the `String` type. Did you mean `string`?"],
        ["Symbol", "Avoid using the `Symbol` type. Did you mean `symbol`?"]
      ]
    },
    "jsx-no-string-ref": true,
    "jsx-no-multiline-js": false,
    "jsx-boolean-value": false,
    "jsx-alignment": false,
    "jsx-no-bind": false,
    "jsx-wrap-multiline": false,
    "jsx-no-lambda": false
  }
}
